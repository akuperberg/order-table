{"version":3,"sources":["node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v17.1.1\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Injector, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener);\n        return () => {\n            el.removeEventListener(evt, listener);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n    // The base URL doesn't really matter, we just need it so relative paths have something\n    // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n    return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            const decrement = function () {\n                count--;\n                if (count == 0) {\n                    callback();\n                }\n            };\n            testabilities.forEach((testability) => {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserXhr }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: EventManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }] });\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n    // TODO: remove (has some usage in G3)\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        this.platformId = platformId;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this.styleRef = new Map();\n        this.hostNodes = new Set();\n        this.styleNodesInDOM = this.collectServerRenderedStyles();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.resetHostNodes();\n    }\n    addStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, 1);\n            if (usageCount === 1) {\n                this.onStyleAdded(style);\n            }\n        }\n    }\n    removeStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, -1);\n            if (usageCount <= 0) {\n                this.onStyleRemoved(style);\n            }\n        }\n    }\n    ngOnDestroy() {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        if (styleNodesInDOM) {\n            styleNodesInDOM.forEach((node) => node.remove());\n            styleNodesInDOM.clear();\n        }\n        for (const style of this.getAllStyles()) {\n            this.onStyleRemoved(style);\n        }\n        this.resetHostNodes();\n    }\n    addHost(hostNode) {\n        this.hostNodes.add(hostNode);\n        for (const style of this.getAllStyles()) {\n            this.addStyleToHost(hostNode, style);\n        }\n    }\n    removeHost(hostNode) {\n        this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n        return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n        for (const host of this.hostNodes) {\n            this.addStyleToHost(host, style);\n        }\n    }\n    onStyleRemoved(style) {\n        const styleRef = this.styleRef;\n        styleRef.get(style)?.elements?.forEach((node) => node.remove());\n        styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n        const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n        if (styles?.length) {\n            const styleMap = new Map();\n            styles.forEach((style) => {\n                if (style.textContent != null) {\n                    styleMap.set(style.textContent, style);\n                }\n            });\n            return styleMap;\n        }\n        return null;\n    }\n    changeUsageCount(style, delta) {\n        const map = this.styleRef;\n        if (map.has(style)) {\n            const styleRefValue = map.get(style);\n            styleRefValue.usage += delta;\n            return styleRefValue.usage;\n        }\n        map.set(style, { usage: delta, elements: [] });\n        return delta;\n    }\n    getStyleElement(host, style) {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        const styleEl = styleNodesInDOM?.get(style);\n        if (styleEl?.parentNode === host) {\n            // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n            styleNodesInDOM.delete(style);\n            styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This attribute is solely used for debugging purposes.\n                styleEl.setAttribute('ng-style-reused', '');\n            }\n            return styleEl;\n        }\n        else {\n            const styleEl = this.doc.createElement('style');\n            if (this.nonce) {\n                styleEl.setAttribute('nonce', this.nonce);\n            }\n            styleEl.textContent = style;\n            if (this.platformIsServer) {\n                styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n            }\n            host.appendChild(styleEl);\n            return styleEl;\n        }\n    }\n    addStyleToHost(host, style) {\n        const styleEl = this.getStyleElement(host, style);\n        const styleRef = this.styleRef;\n        const styleElRef = styleRef.get(style)?.elements;\n        if (styleElRef) {\n            styleElRef.push(styleEl);\n        }\n        else {\n            styleRef.set(style, { elements: [styleEl], usage: 1 });\n        }\n    }\n    resetHostNodes() {\n        const hostNodes = this.hostNodes;\n        hostNodes.clear();\n        // Re-add the head element back since this is the default host.\n        hostNodes.add(this.doc.head);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: SharedStylesHost }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken('RemoveStylesOnCompDestroy', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.rendererByCompId = new Map();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.defaultRenderer =\n            new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n            const platformIsServer = this.platformIsServer;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n            }\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomRendererFactory2 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\nclass DefaultDomRenderer2 {\n    constructor(eventManager, doc, ngZone, platformIsServer) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.data = Object.create(null);\n        /**\n         * By default this renderer throws when encountering synthetic properties\n         * This can be disabled for example by the AsyncAnimationRendererFactory\n         */\n        this.throwOnSyntheticProps = true;\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        if (el == null) {\n            return;\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new Error(`Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = this.platformIsServer ?\n                this.ngZone.runGuarded(() => eventHandler(event)) :\n                eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = shimStylesContent(component.id, component.styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles);\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestroy) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: KeyEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken((typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability, // Also provide as `Testability` for backwards-compatibility.\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    DomRendererFactory2, SharedStylesHost, EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    (typeof ngDevMode === 'undefined' || ngDevMode) ?\n        { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } :\n        []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n            throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }] });\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\nconst win = typeof window !== 'undefined' && window || {};\n\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGestureConfig }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGesturesPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }] });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nclass HammerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(() => DomSanitizerImpl) }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n            default:\n                throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.1\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n    HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n    HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n    return { ɵkind, ɵproviders };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n    // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n    return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [{\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (ngZone.constructor !== NgZone) {\n                    const console = inject(ɵConsole);\n                    const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    // tslint:disable-next-line:no-console\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n    for (const { ɵproviders, ɵkind } of features) {\n        featuresKind.add(ɵkind);\n        if (ɵproviders.length) {\n            providers.push(ɵproviders);\n        }\n    }\n    if (typeof ngDevMode !== 'undefined' && ngDevMode &&\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n        // TODO: Make this a runtime error\n        throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n    }\n    return makeEnvironmentProviders([\n        (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n        ɵwithDomHydration(),\n        ((featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions) ?\n            [] :\n            ɵwithHttpTransferCache({})),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.1.1');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withHttpTransferCacheOptions, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n\n"],"mappings":"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","names":["plugin","styleEl","elem","HydrationFeatureKind"],"x_google_ignoreList":[0]}